#!/usr/bin/env bash
#
# $Id: kolchan-automake 81 2019-05-27 18:51:49+04:00 yds $
#
_bashlyk_log=nouse _bashlyk=kolchan . bashlyk
#
#
#
kolchan-automake::usage() {

  local rc=$? aId
  eval "aId=( $Id: kolchan-automake 81 2019-05-27 18:51:49+04:00 yds $ )"

  printf -- "\n  %s %s %s, (c) %s\n\n"                                         \
            "${0##*/}"                                                         \
            "rev${aId[2]}"                                                     \
            "${aId[3]}"                                                        \
            "2016-$(date +%Y)"

#****h* kolchan/kolchan-automake
	cat <<-EOF | tr -d '#'
#  DESCRIPTION
#    prepare project source tree with autotools support. 
#  USAGE
#    kolchan-automake <options>
#  ARGUMENTS
#    -h, --help               - show this usage and exit
#    -p, --project <name>     - set project name
#    -v, --verbosity <number> - set DEBUGLEVEL for debug messages
#  USES
#    bashlyk >= 1.94
#  AUTHOR
#    Damir Sh. Yakupov <yds@bk.ru>
#  EXAMPLE
#
#    kolchan-automake -p test
#
	EOF

  exit $rc

}
#******
#
#
#
kolchan-automake::main() {

  throw on NoSuchFile ChangeLog
  throw on CommandNotFound autoscan autoheader aclocal autoconf autoreconf automake cat cut grep mv pwd robodoc head tr touch sed xargs

  local fn sPackage sVersion sAuthor pathWork

  #
  # TODO add package name by CLI
  #
  CFG cfg
  cfg.bind.cli help{h} project{p}: verbosity{v}: 
  
  [[ $( cfg.getopt help ) ]] && kolchan-automake::usage
  
  DEBUGLEVEL=$( cfg.getopt verbosity )
  std::isNumber $DEBUGLEVEL || DEBUGLEVEL=1

  : ${sVersion:=0.1}

  errorify on CommandNotFound git && : ${sAuthor:="$( git config --get user.name ) <$( git config --get user.email )>"}

  : ${sAuthor:="${DEBFULLNAME:-$USER} <${DEBEMAIL:-$USER@localhost.localdomain}>"}

  pathWork="$( pwd )"

  [[ -s AUTHORS ]] || echo "$sAuthor" > AUTHORS

  for fn in NEWS README TODO; do [[ -f $fn ]] || touch $fn; done

  sPackage=${pathWork##*/}
  sPackage=${sPackage/-$sVersion/}
  sVersion=$(grep -i version ChangeLog | head -n 1 | xargs | cut -f 2 -d' ')
  : ${sVersion:=0.001}

  sEmail="$(grep -o -E '<.*>' AUTHORS | tr -d '<|>' | head -n 1)"

  cfg.free
  
  autoscan
  mv configure.scan configure.ac || throw on NoSuchFile configure.ac

  autoheader
  sed -i -e "s/AC_INIT.*/AC_INIT(${sPackage}, ${sVersion}, ${sEmail})\nAM_INIT_AUTOMAKE/ig" configure.ac

  aclocal
  autoconf
  autoreconf
  automake --add-missing --copy

  errorify on CommandNotFound git-add-id && git-add-id

  throw on CommandNotFound ./configure make && ./configure --prefix=/usr && make

}
#
#
#
kolchan-automake::main
#
