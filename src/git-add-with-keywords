#!/bin/bash
#
#
. bashlyk
#
#
#
eval "__aId=( $Id: git-add-with-keywords 21 2017-02-16 23:30:41+04:00 toor $ )"
#
#
#
udfUsage() {

  local rc=$? s=$(printf -- '\044Id\044')

  printf -- "\n  %s %s %s, (c) %s\n" \
            "$(_ s0)"                                                          \
            "rev${__aId[2]}"                                                   \
            "${__aId[3]}"                                                      \
            "2016-$(date +%Y)"


#****h* svn2git/git-add-with-keywords
#  DESCRIPTION
#    git-add-with-keywords - add svn-keyword 'Id' emulation to indexed by GIT
#    file
#  AUTHOR
#    Damir Sh. Yakupov <yds@bk.ru>
#  ARGUMENTS
	cat <<-EOF | tr -d '#'

  usage: $(_ s0) [ -h|--help ] | [<files>]
  where
  #  -h, --help - show this usage and exit
  #  <files>    - filenames for adding to GIT repository index with $s keyword
  #               emulation, default added only modified ( early added ) files

	EOF

  eval $( udfOnError exit $rc )

}
#******
udfGitAddWithId() {

  local fmt fn ic=$1 ts ui

  fmt='sed -i -re "s/%sId(.*)?%s/%s/" %s'

  shift

  [[ -d $* ]] && eval $(                                                       \
                                                                               \
    udfOnError retwarn InvalidArgument "$* - directories not supported now"    \
                                                                               \
  )

  if [[ -f "$*" && -n "$( git status -s "$*" | grep -P "^[ AM?][M?]\s$*" )" ]];
  then

    udfDebug 1 "${*}: git status ok."

  else

    eval $(                                                                    \
                                                                               \
      udfOnError retwarn InvalidArgument                                       \
        "$* is mask, not exist or not modified, but may be indexed..."         \
                                                                               \
    )

  fi

  fn="${*##*/}"
  ic=$(( ic + 1 ))
  ts="$( date --rfc-3339=s )"
  ui="$( _ sUser )"

  if udfThrowOnEmptyVariable fn ic ts ui; then

    s="$( printf '\044Id: %s %d %s %s \044\n' "$fn" "$ic" "$ts" "$ui" )"

    eval "$( printf "$fmt" '\\\$' '\\\$' '$s' '$*')" \
      || eval $( udfOnError retwarn "Id not modified.." )

    git add $* && udfDebug 0 "${*}: successfully added to index with Id $ic."

  fi

}
#
udfMain() {

  udfThrowOnCommandNotFound bc date git grep sed xargs

  local i s

  eval set -- "$(_ sArg)"

  [[ $1 =~ ^--?h ]] && udfUsage

  if LC_ALL=C git log 2>&1 | grep '^fatal:.* not have any commits' >/dev/null;
  then

    i=0

  else

    i="$( git shortlog -s | grep -oP '^\s+\d+\s+' | xargs | tr ' ' '+' | bc )"

  fi

  udfIsNumber $i || eval $(                                                    \
                                                                               \
    udfOnError throw NotNumber "$i - summary of the commits expected"          \
                                                                               \
  )

  if [[ $* ]]; then

    for s in "$@"; do

      udfGitAddWithId $i "$s"

    done

  else

    while read -t 8 s; do

      [[ $s =~ ^@@ ]] && udfGitAddWithId $i "${s#@@*}"

    done< <( git status -s $s | sed -re "s/^[ AM][M].(.*)$/@@\1/" )

  fi

}
#
#
#
udfMain
#
