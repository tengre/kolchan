#!/bin/bash
#
#
. bashlyk
#
#
#
eval "__aId=( $Id: git-add-with-keywords 14 2016-07-10 20:05:08+04:00 toor $ )"
#
#
#
udfUsage() {

	printf "\n   $(_ s0) rev${__aId[2]} ${__aId[3]}, (c) 2016\n   'git add <file>' with keyword emulation\n"

#****h* svn2git/git-add-with-keywords
#  DESCRIPTION
#    git-add-with-keywords - add svn-keyword 'Id' emulation to indexed by GIT
#    file
#  AUTHOR
#    Damir Sh. Yakupov <yds@bk.ru>
#  ARGUMENTS
	cat << _EOF | tr -d '#'

   usage: $(_ s0) [ -h|--help ] | arg
   where
#    -h, --help - show this usage
#    arg        - filename for adding to GIT repo index
#
   This version support only 'Id' keyword and single file for adding,
   no directories or list from mask

_EOF
	[[ "$(_ iLastError)" == 0 ]] || echo "$(_ sLastError) ($(_ iLastError))"
	exit $(_ iLastError)

}
#******
udfMain() {

	udfThrowOnCommandNotFound bc date git grep sed xargs

	local fmt fn ic ts ui

	fmt='sed -i -r -e "s/%sId(.*)?%s/%s/" %s'

	if LC_ALL=C git log 2>&1 | grep '^fatal:.* not have any commits' >/dev/null;
	then

		ic=0

	else

		ic=$( git shortlog -s | grep -oP '^\s+\d+\s+' | xargs | tr ' ' '+' | bc )

	fi

	eval set -- "$(_ sArg)"

	[[ -z "$1" || "$1" =~ ^--?h ]] && udfUsage

	[[ -d "$1" ]] && udfUsage

	[[ -f "$1" && -n "$( git status -s "$1" | grep -P "^[ AM?][M?]\s$1" )" ]] || {

		eval $(udfOnError retwarn iErrorNonValidArgument "$1 is mask, not exist or not modified, but may be indexed...")

	}

	fn="${1##*/}"
	ic=$(( ic + 1 ))
	ts="$( date --rfc-3339=s )"
	ui="$(_ sUser)"

	if udfThrowOnEmptyVariable fn ic ts ui; then

		s="$( printf '\044Id: %s %d %s %s \044\n' "$fn" "$ic" "$ts" "$ui" )"
		eval "$( printf "$fmt" '\\\$' '\\\$' '$s' '$fn')" && git add "$1"

	fi

}
#
#
#
udfMain
#
